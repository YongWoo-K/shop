#\uC5B4\uD50C\uB9AC\uCF00\uC774\uC158 \uD3EC\uD2B8 \uC124\uC815
server.port = 80

#MySQL \uC5F0\uACB0 \uC124\uC815
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/shop?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234

#\uC2E4\uD589\uB418\uB294 \uCFFC\uB9AC \uCF58\uC194 \uCD9C\uB825
spring.jpa.properties.hibernate.show_sql=true

#\uCF58\uC194 \uCC3D\uC5D0 \uCD9C\uB825\uB418\uB294 \uCFFC\uB9AC\uB97C \uAC00\uB3C5\uC131 \uC88B\uAC8C \uD3EC\uB9F7\uD305
spring.jpa.properties.hibernate.format_sql=true

#\uCFFC\uB9AC\uC5D0 \uBB3C\uC74C\uD45C\uB85C \uCD9C\uB825\uB418\uB294 \uBC14\uC778\uB4DC \uD30C\uB77C\uBBF8\uD130 \uCD9C\uB825
logging.level.org.hibernate.type.descriptor.sql=trace

#JPA\uC758 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uCD08\uAE30\uD654 \uC804\uB7B5
# -> none(\uC0AC\uC6A9\uD558\uC9C0 \uC54A\uC74C), create(\uAE30\uC874 \uD14C\uC774\uBE14 \uC0AD\uC81C \uD6C4 \uD14C\uC774\uBE14 \uC0DD\uC131), create-drop(\uC885\uB8CC \uC2DC\uC810\uC5D0 \uD14C\uC774\uBE14 \uC0AD\uC81C),
# -> update(\uBCC0\uACBD\uB41C \uC2A4\uD0A4\uB9C8 \uC801\uC6A9), validate(\uC5D4\uD2F0\uD2F0\uC640 \uD14C\uC774\uBE14 \uC815\uC0C1 \uB9E4\uD551 \uD655\uC778)
spring.jpa.hibernate.ddl-auto=validate

#\uD574\uB2F9 \uD504\uB85C\uC81D\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC124\uC815(MySQL)
# -> \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uAD50\uCCB4\uC2DC Dialect\uB97C \uBC14\uAFB8\uACE0\uC790 \uD558\uB294 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC758 Dialect\uB85C \uC124\uC815\uD558\uBA74 \uB41C\uB2E4.
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#Spring Boot Devtools\uC758 Live Reload \uAE30\uB2A5 \uD65C\uC131\uD654
# -> \uAC1C\uBC1C\uC790\uAC00 \uC9C1\uC811 \uBE0C\uB77C\uC6B0\uC800\uC758 \uC0C8\uB85C\uACE0\uCE68\uC744 \uD558\uC9C0 \uC54A\uC544\uB3C4 \uBCC0\uACBD\uB41C \uB9AC\uC18C\uC2A4\uAC00 \uC6F9 \uBE0C\uB77C\uC6B0\uC800\uC5D0 \uBC18\uC601\uB41C\uB2E4.
spring.devtools.livereload.enabled=true

#Property Default \uC124\uC815
# -> Thymeleaf cache \uC0AC\uC6A9 \uC911\uC9C0
# -> \uC2E4\uC81C \uC801\uC6A9\uC2DC \uC6B4\uC601\uD658\uACBD\uACFC \uAC1C\uBC1C\uD658\uACBD\uC758 application.properties \uBD84\uB9AC \uD6C4, \uC6B4\uC601 \uD658\uACBD\uC5D0\uC11C\uB294 \uCE90\uC2F1\uAE30\uB2A5\uC744 \uC0AC\uC6A9\uD558\uACE0,
# -> \uAC1C\uBC1C \uD658\uACBD\uC5D0\uC11C\uB294 \uCE90\uC2F1\uAE30\uB2A5\uC744 \uAEBC\uB450\uB294 \uBC29\uBC95\uC73C\uB85C \uAD00\uB9AC\uD55C\uB2E4.
spring.thymeleaf.cache = false

#\uD30C\uC77C 1\uAC1C\uB2F9 \uCD5C\uB300 \uC0AC\uC774\uC988
spring.servlet.multipart.maxFileSize=20MB
#\uC694\uCCAD\uB2F9 \uCD5C\uB300 \uD30C\uC77C \uD06C\uAE30
spring.servlet.multipart.maxRequestSize=100MB
#\uC0C1\uD488 \uC774\uBBF8\uC9C0 \uC5C5\uB85C\uB4DC \uACBD\uB85C
itemImgLocation=C:/shop/item
#\uB9AC\uC18C\uC2A4 \uC5C5\uB85C\uB4DC \uACBD\uB85C
uploadPath=file:///C:/shop/

#\uAE30\uBCF8 batch size \uC124\uC815
#   -> \uC870\uD68C \uCFFC\uB9AC \uD55C\uBC88\uC73C\uB85C \uC9C0\uC815\uD55C batch size \uB9CC\uD07C \uD55C\uBC88\uC5D0 \uC870\uD68C \uAC00\uB2A5
#   -> \uC5EC\uAE30\uC5D0\uC11C\uB294 \uC870\uD68C \uCFFC\uB9AC \uD55C\uBC88\uC5D0 1000\uAC1C\uC758 \uB370\uC774\uD130\uB97C \uC870\uD68C \uAC00\uB2A5\uD558\uB2E4.
spring.jpa.properties.hibernate.default_batch_fetch_size=1000